@model string
<!DOCTYPE html>
<html>

<head>
    <title>Map Features</title>
</head>

<body>
    <div id="map" style="width: 100%; height: 700px;"></div>
    <script>
        var geoJsonData = @Html.Raw(Model); // Embed the model data directly in the page
        document.addEventListener('DOMContentLoaded', function () {
            var mymap = L.map('map').setView([49.4925, -117.2942], 13);

            L.tileLayer('https://{s}.tile.opentopomap.org/{z}/{x}/{y}.png', {
                maxZoom: 17,
                attribution: 'Map data Â© <a href="https://opentopomap.org">OpenTopoMap</a> contributors'
            }).addTo(mymap);

            // Add the GeoJSON data directly to the map
            L.geoJSON(geoJsonData, {
                onEachFeature: function (feature, layer) {
                    if (feature.properties && feature.properties.PointName) {
                        // Bind hover to show popup
                        layer.on('mouseover', function (e) {
                            e.target.bindPopup(feature.properties.PointName + feature.properties.Buffer).openPopup();
                        });
                        layer.on('mouseout', function (e) {
                            e.target.closePopup();
                        });
                        // Bind click for deletion
                        layer.on('click', function (e) {
                            var featureId = feature.properties.PointId; // Ensure 'PointName' is the correct property key
                            var message = "Delete this feature: " + featureId + "?";
                            if (confirm(message)) {
                                //var featureId = feature.properties.PointId;
                                deleteFeature(featureId, e.target);
                            }
                        });
                    }
                    // Check if there is a Buffer attribute and draw a circle
                    if (feature.properties.Buffer > 0 && feature.properties.FeatureType == "NoFlyNode") {
                        L.circle(layer.getLatLng(), {
                            color: 'red',
                            fillColor: 'orange',
                            fillOpacity: 0.5,
                            radius: feature.properties.Buffer // Radius in meters; adjust as necessary for your data
                        }).addTo(mymap);
                    }
                }
            }).addTo(mymap);

            // Handle map click events
            mymap.on('click', function (e) {
                var lat = e.latlng.lat.toFixed(6); // Get the latitude and fix to 6 decimal places
                var lng = e.latlng.lng.toFixed(6); // Get the longitude and fix to 6 decimal places
                var coordInput = document.getElementById('Coordinates');
                coordInput.value = lng + " " + lat; // Update the hidden input field
            });

            // Delete feature by sending an AJAX request
            function deleteFeature(featureId) {
                console.log("Attempting to delete feature with ID:", featureId);

                fetch(`/Geo/DeleteFeature?featureId=${featureId}`, { method: 'DELETE' })

                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            geoJsonLayer.removeLayer(geoJsonLayer.getLayer(featureId));
                            console.log('Feature deleted');
                        }
                    })
                    .catch(error => console.error('Error deleting feature:', error));
            }
        });
    </script>
    @if (ViewBag.Message != null)
    {
        <p>@ViewBag.Message</p>
    }
    <h2>Create Feature</h2>
    <form asp-action="CreateFeature" asp-controller="Geo" method="post">
        <label for="FeatureType">Feature type</label>
        <select name="FeatureType">
            <option value="NavNode">Navigation Marker</option>
            <option value="NoFlyNode">No-Fly Area</option>
        </select>
        <label for="FeatureName">Feature Name</label>
        <input type="text" id="FeatureName" name="FeatureName" />
        <br />
        <label for="Coordinates">Long Lat</label>
        <input type="text" id="Coordinates" name="Coordinates" />
        <br />
        <label for="Buffer">Buffer</label>
        <input type="number" id="Buffer" name="Buffer" />
        <br />
        <input type="submit" value="Go" />
    </form>
</body>

</html>
